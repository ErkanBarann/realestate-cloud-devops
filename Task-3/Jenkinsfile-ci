pipeline {
  agent any

  environment {
    AWS_REGION = 'eu-central-1'
  }

  stages {
    stage('Set AWS Account ID and TAG') {
      steps {
        script {
          env.AWS_ACCOUNT_ID = sh(script: "aws sts get-caller-identity --query 'Account' --output text", returnStdout: true).trim()
          env.GIT_TAG = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
          env.FRONTEND_REPO = "frontend-repo"
          env.BACKEND_REPO  = "backend-repo"
          env.FRONTEND_IMAGE = "${env.AWS_ACCOUNT_ID}.dkr.ecr.${env.AWS_REGION}.amazonaws.com/${env.FRONTEND_REPO}"
          env.BACKEND_IMAGE  = "${env.AWS_ACCOUNT_ID}.dkr.ecr.${env.AWS_REGION}.amazonaws.com/${env.BACKEND_REPO}"
        }
      }
    }

    stage('Create ECR Repos if not exist') {
      steps {
        sh '''
          aws ecr describe-repositories --repository-names $FRONTEND_REPO --region $AWS_REGION || \
          aws ecr create-repository --repository-name $FRONTEND_REPO --region $AWS_REGION

          aws ecr describe-repositories --repository-names $BACKEND_REPO --region $AWS_REGION || \
          aws ecr create-repository --repository-name $BACKEND_REPO --region $AWS_REGION
        '''
      }
    }

    stage('Clone Repo') {
      steps {
        git credentialsId: 'test', url: 'https://github.com/techpro-aws-devops/RealEstateAppProject.git', branch: 'main'
      }
    }

    stage('ECR Login') {
      steps {
        sh '''
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
        '''
      }
    }

    stage('Build & Push Frontend') {
      steps {
        sh '''
          docker build -t $FRONTEND_IMAGE:$GIT_TAG ./True-Roots-Frontend
          docker tag $FRONTEND_IMAGE:$GIT_TAG $FRONTEND_IMAGE:latest
          docker push $FRONTEND_IMAGE:$GIT_TAG
          docker push $FRONTEND_IMAGE:latest
        '''
      }
    }

    stage('Build & Push Backend') {
      steps {
        sh '''
          docker build -t $BACKEND_IMAGE:$GIT_TAG ./True-Roots-Backend
          docker tag $BACKEND_IMAGE:$GIT_TAG $BACKEND_IMAGE:latest
          docker push $BACKEND_IMAGE:$GIT_TAG
          docker push $BACKEND_IMAGE:latest
        '''
      }
    }
  }

  post {
    always {
      echo 'Pipeline completed.'
    }
  }
}
